<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhKAAoAIYAAGQGBKx+fMy6vIRCRNzW1LyenJxiZNTKzLSOjOTm5MSurJRSVKRydOTe3HwqLNTC
        xMSmpLSWlOTOzKyGhIxKTJxqbNS2tOza3NzS1PTm5My2tJRaXKx6fGwWFNS6vOTW1MSenNzKzLyOjMyu
        rKxydOze3IQ6PNzCxMympMSanLSChIxCRKRmZLyWlLSGhJROTKRqbPTu7JxaXGQODKyChMy+vNza3Lyi
        pJxmZNTOzLSSlOzm5MSytJRWVKR2dOTi5IQyNNTGxMSqrOTS1IxOTPTq7HQeHNS+vOTa3MSipNzOzLyS
        lMyytKx2dOzi5IQ+PNzGxMyqrIxGRLyanLSKjKRubJxeXObm5gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQB
        AABXACwAAAAAKAAoAAAI/wCvCBxIsKDBgwgTKlzIsGHCBA4jHmxwQICAAzYkarxSI8ATID4EbIxYg0OP
        JQh6+NAwkmECFww4yCSBI8CPlgofVGGgYoMMGjBw1MCJMAGVmD5WSGnCgAWNm0QJJmgwwIXJBS82NPFh
        wgbUqFeU6IBBg8UGCCNk1JThIgfYKz8E9BABYwMJJRI4WCFLREMDsAembEAgA0aBEheSVNmg4gWCB1F/
        CPHBoUkPFVBKNAjhogeDoDe+jiRAZQMICjgglFhdIgoMxy8CKCGqo0nlFSAkNGA9BMKKKlVw0MCphAED
        GgtgHEFyYciQBhceNFnAAAcOyCMjVCHhQ0oSJR8sVP+AYQHJkCgUghqYsPGHDSsBfFjpIaH5EgAAlgwp
        8WGDFRYVvECAaAwhIcACKlSxABWafTAFfgV84IQTLfRgAANSQECARA/0QEUVPVSxH2JJ4JdECROWwICF
        JEghAEQNYVDAYGqlgIQTqwmBXxQoTogCDAs0QYQOBzSUAA+VMYDgA6w5EcUMM0Qx4Q47hEBFDzgYkBqB
        BxGggxUiLGBAEhes9kMJI3TQwQhO7JCBExm49oKSE8y2kAJAuTCACEeU8MOEToxghBEjvOnmDkq0sEJd
        VRSwUAMwVOHCAlb0iWKPFjjggAVtZnAoFDCkZyEGCt1gHAkDgKBEj4CeJ8QHh7r/WQQSTKxgxQYGIFBU
        AzUxYEAPIZTJqhNKUOGCBIcWsYOyF2zg360DGtRADQjCcNlqgALqgQkmeJBsEZ4WsYQMFq6gwIYF5RAA
        BwzIUCmgKO4ApwcrdLtsuEXk+0EFC/iEQxAFIaGAFC2420KKU8JJJZWeZpCvssrGkAQLL8DwxBSkDqQB
        DVUIyQATF3xwAXNIlFBykzhmyzAUAUixwQI4CEFQAQZQYYUU8FEhAhUIILCzCD4HDTTQKC2xhA5UGLDC
        CwZQEAFUP+iw4K899LCA1QtkrTVWRCzQNREvgE0EBS+QTbbSVEDVgNQsLNFCCm4bPbSxLqhQNw0BrCtT
        EyQwXUACcFUEOAACagehwwBAJK744ow37njiTyAQBFQJEFCDEBHo0PPmnHe+ueafI6DD6BHcgBFBPzRA
        wAFB1OD667DHHvsDsLeegw0NwChVAzb07vvvwAcf/A9cvuVQQAA7
</value>
  </data>
</root>